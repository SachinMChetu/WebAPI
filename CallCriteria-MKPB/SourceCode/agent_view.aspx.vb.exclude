
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration

Partial Class agent_view
    Inherits System.Web.UI.Page

    Private Sub agent_view_Load(sender As Object, e As EventArgs) Handles Me.Load
        If Not User.Identity.IsAuthenticated Then
            Response.Redirect("login.aspx?ReturnURL=agent_view.aspx?agent_list=" & Request("agent_list"))
        End If

        If Not IsPostBack Then
            hdnAgentList.Value = Request("agent_list")
            txtStart.Text = DateAdd(DateInterval.Day, -14, Today).ToShortDateString
            txtEnd.Text = Today.ToShortDateString
            dsAgentSummary.SelectParameters("username").DefaultValue = User.Identity.Name
            updateDetails()
        End If
    End Sub

    Private Sub btnAdd_Click(sender As Object, e As EventArgs) Handles btnAdd.Click
        hdnAgentList.Value &= "|" & txtAddAgent.Text
        txtAddAgent.Text = ""
        dsAgentSummary.DataBind()
    End Sub

    Private Sub btnGo_Click(sender As Object, e As EventArgs) Handles btnGo.Click
        dsAgentSummary.DataBind()
    End Sub

    Private Sub gvAgentSummary_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles gvAgentSummary.RowCommand
        If e.CommandName = "remove_agent" Then
            'Response.Write(gvAgentSummary.DataKeys(e.CommandArgument).Value & "<BR>")
            'Response.Write(txtAddAgent.Text.Replace(gvAgentSummary.DataKeys(e.CommandArgument).Value, "").Replace("||", "|"))
            'Response.End()
            hdnAgentList.Value = hdnAgentList.Value.Replace(gvAgentSummary.DataKeys(e.CommandArgument).Value, "").Replace("||", "|")

            dsAgentSummary.DataBind()
            updateDetails()
        End If
    End Sub

    Private Sub updateDetails()

        litagent.Text = " for " & hdnAgentList.Value.Replace("|", ", ")

        'Dim query As String = String.Format("select format(review_date, 'MM/yyyy') as [Review Month], avg(display_score) from vwForm  where agent = '{0}' group by format(review_date, 'MM/yyyy'), format(review_date, 'yyyy-MM') order by format(review_date, 'yyyy-MM')", agent_name)

        Dim dt As DataTable = Common.GetTable("exec getAgentDetailData '" & User.Identity.Name & "','" & hdnAgentList.Value & "'")



        Dim dv As DataView = New DataView(dt)
        Dim dv_months As DataTable = dv.ToTable(True, "Review Month")
        Dim dv_agents As DataTable = dv.ToTable(True, "agent")


        'For i As Integer = 0 To dv_months.Rows.Count - 1

        '    Response.Write(dv_months.Rows(i)(0) & "<br>")
        'Next

        'Response.End()

        Dim x As String() = New String(dv_months.Rows.Count - 1) {}
        For i As Integer = 0 To dv_months.Rows.Count - 1

            x(i) = dv_months.Rows(i)(0).ToString()
            '  Response.Write(x(i) & "<br>")
        Next

        Dim agent_count As Integer = dv_agents.Rows.Count

        Dim y As Decimal()() = New Decimal(dv_agents.Rows.Count - 1)() {}

        For agent_index = 0 To dv_agents.Rows.Count - 1
            y(agent_index) = New Decimal(dv_months.Rows.Count) {}
        Next


        For i As Integer = 0 To dt.Rows.Count - 1

            If dt.Rows(i)(1).ToString <> "" Then

                Try
                    y(i Mod agent_count)(CInt(Math.Floor(i / agent_count))) = Convert.ToInt32(dt.Rows(i)(1))

                Catch ex As Exception
                    Response.Write(i & "<br>")
                    Response.Write(Convert.ToInt32(Math.Floor(i / agent_count)) & "<br>")
                    Response.Write(CInt(i / agent_count) & "<br>")

                    Response.Write(dt.Rows(i)(1) & " " & (Math.Floor(i / agent_count)) & " " & (i Mod agent_count) & "<br>")
                    Response.End()
                End Try
            Else
                y(i Mod agent_count)(CInt(Math.Floor(i / agent_count))) = Nothing
            End If
        Next

        'Response.End()


        'For agent_index = 0 To dv_agents.Rows.Count - 1
        '    BarChart1.Series.Add(New AjaxControlToolkit.BarChartSeries() With {
        '     .Data = y(agent_index),
        '     .Name = dv_agents.Rows(agent_index).Item("agent")
        '    })
        'Next

        'BarChart1.CategoriesAxis = String.Join(",", x)
        'BarChart1.ChartTitle = String.Format("Average Scores")
        'If x.Length > 3 Then 'AjaxControlToolkit.BarChartSeries
        '    BarChart1.ChartWidth = (x.Length * 100).ToString()
        'End If
        'BarChart1.Visible = litagent.Text <> ""


        For agent_index = 0 To dv_agents.Rows.Count - 1
            Linechart1.Series.Add(New AjaxControlToolkit.LineChartSeries() With {
             .Data = y(agent_index),
             .Name = dv_agents.Rows(agent_index).Item("agent")
            })
        Next


        Linechart1.CategoriesAxis = String.Join(",", x)
        Linechart1.ChartTitle = String.Format("Average Scores")
        If x.Length > 3 Then 'AjaxControlToolkit.BarChartSeries
            Linechart1.ChartWidth = (x.Length * 100).ToString()
        End If
        Linechart1.Visible = litagent.Text <> ""


    End Sub


    <System.Web.Script.Services.ScriptMethod(),
System.Web.Services.WebMethod()>
    Public Shared Function SearchCustomers(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Dim customers As List(Of String) = New List(Of String)
        Dim dt As DataTable = Common.GetTable("select distinct top " & count & " agent from vwForm join userapps on userapps.user_scorecard = scorecard and username =  '" & HttpContext.Current.User.Identity.Name & "' and review_date > dateadd(d, -30, getdate()) and agent is not null and agent <> '' and agent like '" & prefixText & "%'")
        For Each dr In dt.Rows
            customers.Add(dr("agent").ToString)
        Next

        Return customers
    End Function

    Private Sub gvAgentSummary_DataBound(sender As Object, e As EventArgs) Handles gvAgentSummary.DataBound
        updateDetails()

    End Sub
End Class
