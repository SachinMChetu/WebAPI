//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CC_ProdEntities : DbContext
    {
        public CC_ProdEntities()
            : base("name=CC_ProdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_TransactionIndex_ef51975e_2bc0_4b36_9fda_181f776e5671> C_TransactionIndex_ef51975e_2bc0_4b36_9fda_181f776e5671 { get; set; }
        public virtual DbSet<ActionPlan> ActionPlans { get; set; }
        public virtual DbSet<additional_pay> additional_pay { get; set; }
        public virtual DbSet<Agent_Hours> Agent_Hours { get; set; }
        public virtual DbSet<answer_comments> answer_comments { get; set; }
        public virtual DbSet<API_KEYS> API_KEYS { get; set; }
        public virtual DbSet<app_settings> app_settings { get; set; }
        public virtual DbSet<app_specific_exports> app_specific_exports { get; set; }
        public virtual DbSet<Applicant> Applicants { get; set; }
        public virtual DbSet<ApplicantsQ> ApplicantsQs { get; set; }
        public virtual DbSet<ApplicantsQnA> ApplicantsQnAs { get; set; }
        public virtual DbSet<appNote> appNotes { get; set; }
        public virtual DbSet<AudioData> AudioDatas { get; set; }
        public virtual DbSet<available_columns> available_columns { get; set; }
        public virtual DbSet<billing_rates> billing_rates { get; set; }
        public virtual DbSet<cali_pending_client> cali_pending_client { get; set; }
        public virtual DbSet<calibration_pending> calibration_pending { get; set; }
        public virtual DbSet<calibration_scores> calibration_scores { get; set; }
        public virtual DbSet<calibration_scores_client> calibration_scores_client { get; set; }
        public virtual DbSet<call_centers> call_centers { get; set; }
        public virtual DbSet<Call_Failed_Email_Sent> Call_Failed_Email_Sent { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CoachingLog> CoachingLogs { get; set; }
        public virtual DbSet<CorrectiveAction> CorrectiveActions { get; set; }
        public virtual DbSet<dba_indexDefragExclusion> dba_indexDefragExclusion { get; set; }
        public virtual DbSet<dba_indexDefragLog> dba_indexDefragLog { get; set; }
        public virtual DbSet<dba_indexDefragStatus> dba_indexDefragStatus { get; set; }
        public virtual DbSet<dbl_users> dbl_users { get; set; }
        public virtual DbSet<DMS_listID> DMS_listID { get; set; }
        public virtual DbSet<dropDownItem> dropDownItems { get; set; }
        public virtual DbSet<email_routing> email_routing { get; set; }
        public virtual DbSet<email_schedule> email_schedule { get; set; }
        public virtual DbSet<email_templates> email_templates { get; set; }
        public virtual DbSet<email_user_subscription> email_user_subscription { get; set; }
        public virtual DbSet<ExtendedUserProfile> ExtendedUserProfiles { get; set; }
        public virtual DbSet<filter_data> filter_data { get; set; }
        public virtual DbSet<forced_filters> forced_filters { get; set; }
        public virtual DbSet<form_notifications> form_notifications { get; set; }
        public virtual DbSet<form_q_responses> form_q_responses { get; set; }
        public virtual DbSet<form_q_score_changes> form_q_score_changes { get; set; }
        public virtual DbSet<form_q_scores> form_q_scores { get; set; }
        public virtual DbSet<form_q_scores_options> form_q_scores_options { get; set; }
        public virtual DbSet<form_score3> form_score3 { get; set; }
        public virtual DbSet<FPI_notes> FPI_notes { get; set; }
        public virtual DbSet<FPI_sites> FPI_sites { get; set; }
        public virtual DbSet<guideline_updates> guideline_updates { get; set; }
        public virtual DbSet<Keyword_Changes> Keyword_Changes { get; set; }
        public virtual DbSet<link_exceptions> link_exceptions { get; set; }
        public virtual DbSet<link_list> link_list { get; set; }
        public virtual DbSet<linked_items> linked_items { get; set; }
        public virtual DbSet<messaging> messagings { get; set; }
        public virtual DbSet<moduleList> moduleLists { get; set; }
        public virtual DbSet<molly_agent_data> molly_agent_data { get; set; }
        public virtual DbSet<molly_phone_data> molly_phone_data { get; set; }
        public virtual DbSet<ms_agents> ms_agents { get; set; }
        public virtual DbSet<MyReportField> MyReportFields { get; set; }
        public virtual DbSet<MyReportFilter> MyReportFilters { get; set; }
        public virtual DbSet<myReport> myReports { get; set; }
        public virtual DbSet<notification_steps> notification_steps { get; set; }
        public virtual DbSet<notification_visibility> notification_visibility { get; set; }
        public virtual DbSet<notification> notifications { get; set; }
        public virtual DbSet<otherFormData> otherFormDatas { get; set; }
        public virtual DbSet<q_faqs> q_faqs { get; set; }
        public virtual DbSet<qa_slots> qa_slots { get; set; }
        public virtual DbSet<qs_agents> qs_agents { get; set; }
        public virtual DbSet<qs_pub_emails> qs_pub_emails { get; set; }
        public virtual DbSet<question_answers> question_answers { get; set; }
        public virtual DbSet<question_options> question_options { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<reportField> reportFields { get; set; }
        public virtual DbSet<saved_queries> saved_queries { get; set; }
        public virtual DbSet<sc_inputs> sc_inputs { get; set; }
        public virtual DbSet<sc_notes> sc_notes { get; set; }
        public virtual DbSet<schedule_slots> schedule_slots { get; set; }
        public virtual DbSet<SchedulingAssignedQA> SchedulingAssignedQAs { get; set; }
        public virtual DbSet<SchedulingDaysSheet> SchedulingDaysSheets { get; set; }
        public virtual DbSet<SchedulingRequieredQA> SchedulingRequieredQAs { get; set; }
        public virtual DbSet<SchedulingTimeSheet> SchedulingTimeSheets { get; set; }
        public virtual DbSet<SchedulingTimeShift> SchedulingTimeShifts { get; set; }
        public virtual DbSet<SchedulingTimeShiftHour> SchedulingTimeShiftHours { get; set; }
        public virtual DbSet<SchedulingUserHour> SchedulingUserHours { get; set; }
        public virtual DbSet<school_update_list> school_update_list { get; set; }
        public virtual DbSet<School_X_Data> School_X_Data { get; set; }
        public virtual DbSet<scorecard> scorecards { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<ShiftHeader> ShiftHeaders { get; set; }
        public virtual DbSet<ShiftItem> ShiftItems { get; set; }
        public virtual DbSet<spot_auto> spot_auto { get; set; }
        public virtual DbSet<spot_perf> spot_perf { get; set; }
        public virtual DbSet<st_clients> st_clients { get; set; }
        public virtual DbSet<synopsisFix> synopsisFixes { get; set; }
        public virtual DbSet<system_comments> system_comments { get; set; }
        public virtual DbSet<tblExcelData> tblExcelDatas { get; set; }
        public virtual DbSet<Timezone> Timezones { get; set; }
        public virtual DbSet<TimezoneAdjustmentRule> TimezoneAdjustmentRules { get; set; }
        public virtual DbSet<tt_agents> tt_agents { get; set; }
        public virtual DbSet<update_mgmt> update_mgmt { get; set; }
        public virtual DbSet<update_mgmt_notes> update_mgmt_notes { get; set; }
        public virtual DbSet<url> urls { get; set; }
        public virtual DbSet<url_cloak> url_cloak { get; set; }
        public virtual DbSet<user_columns> user_columns { get; set; }
        public virtual DbSet<user_reports> user_reports { get; set; }
        public virtual DbSet<UserApp> UserApps { get; set; }
        public virtual DbSet<UserAppTracker> UserAppTrackers { get; set; }
        public virtual DbSet<UserExtraInfo> UserExtraInfoes { get; set; }
        public virtual DbSet<UserSetting> UserSettings { get; set; }
        public virtual DbSet<utterance_flags> utterance_flags { get; set; }
        public virtual DbSet<vendor> vendors { get; set; }
        public virtual DbSet<XCC_REPORT_NEW> XCC_REPORT_NEW { get; set; }
        public virtual DbSet<xl_edu_mapping> xl_edu_mapping { get; set; }
        public virtual DbSet<xl_mortgage_import> xl_mortgage_import { get; set; }
        public virtual DbSet<ZipCode> ZipCodes { get; set; }
        public virtual DbSet<acm_directory> acm_directory { get; set; }
        public virtual DbSet<acm_files> acm_files { get; set; }
        public virtual DbSet<agenda_item> agenda_item { get; set; }
        public virtual DbSet<agenda_topic_responses> agenda_topic_responses { get; set; }
        public virtual DbSet<agenda_topic_views> agenda_topic_views { get; set; }
        public virtual DbSet<agenda_topics> agenda_topics { get; set; }
        public virtual DbSet<agent_hours2> agent_hours2 { get; set; }
        public virtual DbSet<AGGREGATOR> AGGREGATORs { get; set; }
        public virtual DbSet<answer_comments_back> answer_comments_back { get; set; }
        public virtual DbSet<api_access> api_access { get; set; }
        public virtual DbSet<app_ip> app_ip { get; set; }
        public virtual DbSet<app_Notes> app_Notes { get; set; }
        public virtual DbSet<app_setting_back> app_setting_back { get; set; }
        public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public virtual DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }
        public virtual DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }
        public virtual DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public virtual DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public virtual DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<aspnet_UsersInRoles> aspnet_UsersInRoles { get; set; }
        public virtual DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }
        public virtual DbSet<bad_call_backup> bad_call_backup { get; set; }
        public virtual DbSet<BillingData> BillingDatas { get; set; }
        public virtual DbSet<cal_pend> cal_pend { get; set; }
        public virtual DbSet<cali_483_11_15> cali_483_11_15 { get; set; }
        public virtual DbSet<calibration_form> calibration_form { get; set; }
        public virtual DbSet<calibration_form_client> calibration_form_client { get; set; }
        public virtual DbSet<calibration_pending_bk> calibration_pending_bk { get; set; }
        public virtual DbSet<chat_data> chat_data { get; set; }
        public virtual DbSet<coaching_visibility> coaching_visibility { get; set; }
        public virtual DbSet<contactics_directory> contactics_directory { get; set; }
        public virtual DbSet<conversion_reasons> conversion_reasons { get; set; }
        public virtual DbSet<conversion_scorecards> conversion_scorecards { get; set; }
        public virtual DbSet<cp_back> cp_back { get; set; }
        public virtual DbSet<cpc_activity> cpc_activity { get; set; }
        public virtual DbSet<cpc_deleted> cpc_deleted { get; set; }
        public virtual DbSet<CSAutoSaleRep> CSAutoSaleReps { get; set; }
        public virtual DbSet<csCallStatu> csCallStatus { get; set; }
        public virtual DbSet<csCallType> csCallTypes { get; set; }
        public virtual DbSet<csReviewStatu> csReviewStatus { get; set; }
        public virtual DbSet<csReviewType> csReviewTypes { get; set; }
        public virtual DbSet<csTempStatu> csTempStatus { get; set; }
        public virtual DbSet<csTempType> csTempTypes { get; set; }
        public virtual DbSet<csTempXCC> csTempXCCs { get; set; }
        public virtual DbSet<current_missed> current_missed { get; set; }
        public virtual DbSet<daily_reports> daily_reports { get; set; }
        public virtual DbSet<dailyAgentMissed> dailyAgentMisseds { get; set; }
        public virtual DbSet<dms_agents> dms_agents { get; set; }
        public virtual DbSet<dms_temp_audio> dms_temp_audio { get; set; }
        public virtual DbSet<DomainMessageAck> DomainMessageAcks { get; set; }
        public virtual DbSet<DomainMessage> DomainMessages { get; set; }
        public virtual DbSet<dynamic_question_rules> dynamic_question_rules { get; set; }
        public virtual DbSet<eduff_agents> eduff_agents { get; set; }
        public virtual DbSet<eduff_backup> eduff_backup { get; set; }
        public virtual DbSet<eduff_websites> eduff_websites { get; set; }
        public virtual DbSet<edufficient_filenames> edufficient_filenames { get; set; }
        public virtual DbSet<email_subscription_exportreport> email_subscription_exportreport { get; set; }
        public virtual DbSet<esto_agents> esto_agents { get; set; }
        public virtual DbSet<esto_file> esto_file { get; set; }
        public virtual DbSet<esto_files> esto_files { get; set; }
        public virtual DbSet<exportQueue> exportQueues { get; set; }
        public virtual DbSet<ExportReportType> ExportReportTypes { get; set; }
        public virtual DbSet<extra_user_hours> extra_user_hours { get; set; }
        public virtual DbSet<failCallEmail> failCallEmails { get; set; }
        public virtual DbSet<flatPost> flatPosts { get; set; }
        public virtual DbSet<fn_backup> fn_backup { get; set; }
        public virtual DbSet<form_c_responses> form_c_responses { get; set; }
        public virtual DbSet<form_c_responses_client> form_c_responses_client { get; set; }
        public virtual DbSet<form_c_score_changes> form_c_score_changes { get; set; }
        public virtual DbSet<form_c_score_changes_client> form_c_score_changes_client { get; set; }
        public virtual DbSet<form_c_scores_options> form_c_scores_options { get; set; }
        public virtual DbSet<form_c_scores_options_client> form_c_scores_options_client { get; set; }
        public virtual DbSet<form_q_responses_other> form_q_responses_other { get; set; }
        public virtual DbSet<form_q_responses_save> form_q_responses_save { get; set; }
        public virtual DbSet<form_q_scores_bkup> form_q_scores_bkup { get; set; }
        public virtual DbSet<form_q_scores_custom> form_q_scores_custom { get; set; }
        public virtual DbSet<form_q_scores_options_other> form_q_scores_options_other { get; set; }
        public virtual DbSet<form_q_scores_options_save> form_q_scores_options_save { get; set; }
        public virtual DbSet<form_q_scores_options_training> form_q_scores_options_training { get; set; }
        public virtual DbSet<form_q_scores_other> form_q_scores_other { get; set; }
        public virtual DbSet<form_q_scores_save> form_q_scores_save { get; set; }
        public virtual DbSet<form_q_scores_training> form_q_scores_training { get; set; }
        public virtual DbSet<form_q_training_responses> form_q_training_responses { get; set; }
        public virtual DbSet<form_score_other> form_score_other { get; set; }
        public virtual DbSet<form_score_training> form_score_training { get; set; }
        public virtual DbSet<form_score3_save> form_score3_save { get; set; }
        public virtual DbSet<form_section_score> form_section_score { get; set; }
        public virtual DbSet<grand_data> grand_data { get; set; }
        public virtual DbSet<graspy_directory> graspy_directory { get; set; }
        public virtual DbSet<gtn_directory> gtn_directory { get; set; }
        public virtual DbSet<heatbeat_data> heatbeat_data { get; set; }
        public virtual DbSet<inactive_users> inactive_users { get; set; }
        public virtual DbSet<InformationFormTmp> InformationFormTmps { get; set; }
        public virtual DbSet<keyword_tracking> keyword_tracking { get; set; }
        public virtual DbSet<LoginTracker> LoginTrackers { get; set; }
        public virtual DbSet<max_answers> max_answers { get; set; }
        public virtual DbSet<min_answers> min_answers { get; set; }
        public virtual DbSet<module_exceptions> module_exceptions { get; set; }
        public virtual DbSet<ms_data> ms_data { get; set; }
        public virtual DbSet<next_item> next_item { get; set; }
        public virtual DbSet<notification_profiles> notification_profiles { get; set; }
        public virtual DbSet<notifications_override> notifications_override { get; set; }
        public virtual DbSet<orphan_notifications> orphan_notifications { get; set; }
        public virtual DbSet<orphan_reviews> orphan_reviews { get; set; }
        public virtual DbSet<other_clone> other_clone { get; set; }
        public virtual DbSet<otherFormDataPending> otherFormDataPendings { get; set; }
        public virtual DbSet<outgoing_email> outgoing_email { get; set; }
        public virtual DbSet<pay2sc_dev> pay2sc_dev { get; set; }
        public virtual DbSet<pay3scw_dev> pay3scw_dev { get; set; }
        public virtual DbSet<pm_directory> pm_directory { get; set; }
        public virtual DbSet<processed_files> processed_files { get; set; }
        public virtual DbSet<q_instructions> q_instructions { get; set; }
        public virtual DbSet<q_instructions_bk> q_instructions_bk { get; set; }
        public virtual DbSet<q_summary_data> q_summary_data { get; set; }
        public virtual DbSet<q3m_directory> q3m_directory { get; set; }
        public virtual DbSet<qa_backup> qa_backup { get; set; }
        public virtual DbSet<qs_agent_08092018> qs_agent_08092018 { get; set; }
        public virtual DbSet<qs_files> qs_files { get; set; }
        public virtual DbSet<question_calcs> question_calcs { get; set; }
        public virtual DbSet<question_result_backup> question_result_backup { get; set; }
        public virtual DbSet<question_rules> question_rules { get; set; }
        public virtual DbSet<rejection_profiles> rejection_profiles { get; set; }
        public virtual DbSet<rejection_reasons> rejection_reasons { get; set; }
        public virtual DbSet<review_documents> review_documents { get; set; }
        public virtual DbSet<sc_training_approvals> sc_training_approvals { get; set; }
        public virtual DbSet<sc_update> sc_update { get; set; }
        public virtual DbSet<SchedulingUserDay> SchedulingUserDays { get; set; }
        public virtual DbSet<school_clone> school_clone { get; set; }
        public virtual DbSet<scorecard_changes> scorecard_changes { get; set; }
        public virtual DbSet<scorecard_groups> scorecard_groups { get; set; }
        public virtual DbSet<scoring_history> scoring_history { get; set; }
        public virtual DbSet<searchedValue> searchedValues { get; set; }
        public virtual DbSet<spotcheck> spotchecks { get; set; }
        public virtual DbSet<sql_sent> sql_sent { get; set; }
        public virtual DbSet<submit_listen> submit_listen { get; set; }
        public virtual DbSet<sys_columns_backup> sys_columns_backup { get; set; }
        public virtual DbSet<system_settings> system_settings { get; set; }
        public virtual DbSet<t2mktagents> t2mktagents { get; set; }
        public virtual DbSet<tblZip> tblZips { get; set; }
        public virtual DbSet<temp_all> temp_all { get; set; }
        public virtual DbSet<temp_answers> temp_answers { get; set; }
        public virtual DbSet<temp_questions> temp_questions { get; set; }
        public virtual DbSet<transcript_data> transcript_data { get; set; }
        public virtual DbSet<ub_directory> ub_directory { get; set; }
        public virtual DbSet<universitites_directory> universitites_directory { get; set; }
        public virtual DbSet<user_groups> user_groups { get; set; }
        public virtual DbSet<user_groups_08092018> user_groups_08092018 { get; set; }
        public virtual DbSet<UserDash> UserDashes { get; set; }
        public virtual DbSet<userextrainfo_08092018> userextrainfo_08092018 { get; set; }
        public virtual DbSet<utterance_template> utterance_template { get; set; }
        public virtual DbSet<vb_keywords> vb_keywords { get; set; }
        public virtual DbSet<vb_ss_data> vb_ss_data { get; set; }
        public virtual DbSet<vb_ss_data2> vb_ss_data2 { get; set; }
        public virtual DbSet<vw_aspnet_Applications> vw_aspnet_Applications { get; set; }
        public virtual DbSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers { get; set; }
        public virtual DbSet<vw_aspnet_Profiles> vw_aspnet_Profiles { get; set; }
        public virtual DbSet<vw_aspnet_Roles> vw_aspnet_Roles { get; set; }
        public virtual DbSet<vw_aspnet_Users> vw_aspnet_Users { get; set; }
        public virtual DbSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles { get; set; }
        public virtual DbSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths { get; set; }
        public virtual DbSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared { get; set; }
        public virtual DbSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User { get; set; }
        public virtual DbSet<WAV_DATA> WAV_DATA { get; set; }
        public virtual DbSet<webcompliance> webcompliances { get; set; }
        public virtual DbSet<weekly_CPS> weekly_CPS { get; set; }
        public virtual DbSet<xcc_report_new_pending> xcc_report_new_pending { get; set; }
        public virtual DbSet<xcc_report_new_save> xcc_report_new_save { get; set; }
        public virtual DbSet<XCC_REPORT_OLD> XCC_REPORT_OLD { get; set; }
        public virtual DbSet<XCC_RESULTS> XCC_RESULTS { get; set; }
        public virtual DbSet<xcc_transcribe> xcc_transcribe { get; set; }
        public virtual DbSet<xl_files> xl_files { get; set; }
        public virtual DbSet<xrn_io> xrn_io { get; set; }
        public virtual DbSet<vwCaliForm> vwCaliForms { get; set; }
        public virtual DbSet<vwCF> vwCFs { get; set; }
        public virtual DbSet<vwFN> vwFNs { get; set; }
        public virtual DbSet<vwForm> vwForms { get; set; }
        public virtual DbSet<vwFormOther> vwFormOthers { get; set; }
        public virtual DbSet<vwFormSimple> vwFormSimples { get; set; }
        public virtual DbSet<vwOpen> vwOpens { get; set; }
        public virtual DbSet<vwTrain> vwTrains { get; set; }
        public virtual DbSet<school_data> school_data { get; set; }
        public virtual DbSet<collected_data> collected_data { get; set; }
        public virtual DbSet<form_q_scores_options_changes> form_q_scores_options_changes { get; set; }
        public virtual DbSet<form_q_response_changes> form_q_response_changes { get; set; }
        public virtual DbSet<session_viewed> session_viewed { get; set; }
    
        [DbFunction("CC_ProdEntities", "checkEDUFirstSchools")]
        public virtual IQueryable<checkEDUFirstSchools_Result> checkEDUFirstSchools(Nullable<int> f_id)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<checkEDUFirstSchools_Result>("[CC_ProdEntities].[checkEDUFirstSchools](@f_id)", f_idParameter);
        }
    
        [DbFunction("CC_ProdEntities", "checkGraspySchools")]
        public virtual IQueryable<checkGraspySchools_Result> checkGraspySchools(Nullable<int> f_id)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<checkGraspySchools_Result>("[CC_ProdEntities].[checkGraspySchools](@f_id)", f_idParameter);
        }
    
        [DbFunction("CC_ProdEntities", "dba_parseString_udf")]
        public virtual IQueryable<dba_parseString_udf_Result> dba_parseString_udf(string stringToParse, string delimiter)
        {
            var stringToParseParameter = stringToParse != null ?
                new ObjectParameter("stringToParse", stringToParse) :
                new ObjectParameter("stringToParse", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<dba_parseString_udf_Result>("[CC_ProdEntities].[dba_parseString_udf](@stringToParse, @delimiter)", stringToParseParameter, delimiterParameter);
        }
    
        [DbFunction("CC_ProdEntities", "getAllClientQuestions")]
        public virtual IQueryable<getAllClientQuestions_Result> getAllClientQuestions(Nullable<int> form_id, Nullable<int> section_id, string username)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var section_idParameter = section_id.HasValue ?
                new ObjectParameter("section_id", section_id) :
                new ObjectParameter("section_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getAllClientQuestions_Result>("[CC_ProdEntities].[getAllClientQuestions](@form_id, @section_id, @username)", form_idParameter, section_idParameter, usernameParameter);
        }
    
        [DbFunction("CC_ProdEntities", "getAllClientQuestionsAllSections")]
        public virtual IQueryable<getAllClientQuestionsAllSections_Result> getAllClientQuestionsAllSections(Nullable<int> form_id, string username)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getAllClientQuestionsAllSections_Result>("[CC_ProdEntities].[getAllClientQuestionsAllSections](@form_id, @username)", form_idParameter, usernameParameter);
        }
    
        [DbFunction("CC_ProdEntities", "getAllMissedItemsQuestions")]
        public virtual IQueryable<getAllMissedItemsQuestions_Result> getAllMissedItemsQuestions(Nullable<int> form_id, string username)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getAllMissedItemsQuestions_Result>("[CC_ProdEntities].[getAllMissedItemsQuestions](@form_id, @username)", form_idParameter, usernameParameter);
        }
    
        [DbFunction("CC_ProdEntities", "GetFormListByShortName")]
        public virtual IQueryable<GetFormListByShortName_Result> GetFormListByShortName(string q_short_name, string appname)
        {
            var q_short_nameParameter = q_short_name != null ?
                new ObjectParameter("q_short_name", q_short_name) :
                new ObjectParameter("q_short_name", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetFormListByShortName_Result>("[CC_ProdEntities].[GetFormListByShortName](@q_short_name, @appname)", q_short_nameParameter, appnameParameter);
        }
    
        [DbFunction("CC_ProdEntities", "getMissedCalls")]
        public virtual IQueryable<getMissedCalls_Result> getMissedCalls(string qID)
        {
            var qIDParameter = qID != null ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getMissedCalls_Result>("[CC_ProdEntities].[getMissedCalls](@QID)", qIDParameter);
        }
    
        [DbFunction("CC_ProdEntities", "getMissedSectionCalls")]
        public virtual IQueryable<getMissedSectionCalls_Result> getMissedSectionCalls(string qID)
        {
            var qIDParameter = qID != null ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getMissedSectionCalls_Result>("[CC_ProdEntities].[getMissedSectionCalls](@QID)", qIDParameter);
        }
    
        [DbFunction("CC_ProdEntities", "GetSchoolData")]
        public virtual IQueryable<GetSchoolData_Result> GetSchoolData(Nullable<int> xcc_id)
        {
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSchoolData_Result>("[CC_ProdEntities].[GetSchoolData](@xcc_id)", xcc_idParameter);
        }
    
        [DbFunction("CC_ProdEntities", "GetSchoolDataOrdered")]
        public virtual IQueryable<GetSchoolDataOrdered_Result> GetSchoolDataOrdered(Nullable<int> xcc_id)
        {
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSchoolDataOrdered_Result>("[CC_ProdEntities].[GetSchoolDataOrdered](@xcc_id)", xcc_idParameter);
        }
    
        [DbFunction("CC_ProdEntities", "getUpdatedSummedComments")]
        public virtual IQueryable<getUpdatedSummedComments_Result> getUpdatedSummedComments(Nullable<int> f_id, string username)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getUpdatedSummedComments_Result>("[CC_ProdEntities].[getUpdatedSummedComments](@f_id, @username)", f_idParameter, usernameParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_Array")]
        public virtual IQueryable<json_Array_Result> json_Array(Nullable<int> id, Nullable<int> parent, Nullable<int> start, string jSON)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("parent", parent) :
                new ObjectParameter("parent", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_Array_Result>("[CC_ProdEntities].[json_Array](@id, @parent, @start, @JSON)", idParameter, parentParameter, startParameter, jSONParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_Item")]
        public virtual IQueryable<json_Item_Result> json_Item(Nullable<int> id, Nullable<int> parent, Nullable<int> start, string jSON, Nullable<int> parseName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("parent", parent) :
                new ObjectParameter("parent", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            var parseNameParameter = parseName.HasValue ?
                new ObjectParameter("parseName", parseName) :
                new ObjectParameter("parseName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_Item_Result>("[CC_ProdEntities].[json_Item](@id, @parent, @start, @JSON, @parseName)", idParameter, parentParameter, startParameter, jSONParameter, parseNameParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_Name")]
        public virtual IQueryable<json_Name_Result> json_Name(Nullable<int> start, string jSON)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_Name_Result>("[CC_ProdEntities].[json_Name](@start, @JSON)", startParameter, jSONParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_Number")]
        public virtual IQueryable<json_Number_Result> json_Number(string jSON, Nullable<int> start)
        {
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_Number_Result>("[CC_ProdEntities].[json_Number](@JSON, @start)", jSONParameter, startParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_Object")]
        public virtual IQueryable<json_Object_Result> json_Object(Nullable<int> id, Nullable<int> parent, Nullable<int> start, string jSON)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("parent", parent) :
                new ObjectParameter("parent", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_Object_Result>("[CC_ProdEntities].[json_Object](@id, @parent, @start, @JSON)", idParameter, parentParameter, startParameter, jSONParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_Parse")]
        public virtual IQueryable<json_Parse_Result> json_Parse(string json)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_Parse_Result>("[CC_ProdEntities].[json_Parse](@json)", jsonParameter);
        }
    
        [DbFunction("CC_ProdEntities", "json_String")]
        public virtual IQueryable<json_String_Result> json_String(string jSON, Nullable<int> start)
        {
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<json_String_Result>("[CC_ProdEntities].[json_String](@JSON, @start)", jSONParameter, startParameter);
        }
    
        [DbFunction("CC_ProdEntities", "parseJSON")]
        public virtual IQueryable<parseJSON_Result> parseJSON(string jSON)
        {
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<parseJSON_Result>("[CC_ProdEntities].[parseJSON](@JSON)", jSONParameter);
        }
    
        [DbFunction("CC_ProdEntities", "split")]
        public virtual IQueryable<split_Result> split(string delimited, string delimiter)
        {
            var delimitedParameter = delimited != null ?
                new ObjectParameter("delimited", delimited) :
                new ObjectParameter("delimited", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<split_Result>("[CC_ProdEntities].[split](@delimited, @delimiter)", delimitedParameter, delimiterParameter);
        }
    
        [DbFunction("CC_ProdEntities", "Split1")]
        public virtual IQueryable<Split1_Result> Split1(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split1_Result>("[CC_ProdEntities].[Split1](@input)", inputParameter);
        }
    
        [DbFunction("CC_ProdEntities", "SplitDelim")]
        public virtual IQueryable<SplitDelim_Result> SplitDelim(string strString, string delim)
        {
            var strStringParameter = strString != null ?
                new ObjectParameter("strString", strString) :
                new ObjectParameter("strString", typeof(string));
    
            var delimParameter = delim != null ?
                new ObjectParameter("delim", delim) :
                new ObjectParameter("delim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitDelim_Result>("[CC_ProdEntities].[SplitDelim](@strString, @delim)", strStringParameter, delimParameter);
        }
    
        [DbFunction("CC_ProdEntities", "SplitNumeric")]
        public virtual IQueryable<SplitNumeric_Result> SplitNumeric(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitNumeric_Result>("[CC_ProdEntities].[SplitNumeric](@input)", inputParameter);
        }
    
        [DbFunction("CC_ProdEntities", "String_Split")]
        public virtual IQueryable<String_Split_Result> String_Split(string text, string delimiter)
        {
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<String_Split_Result>("[CC_ProdEntities].[String_Split](@Text, @Delimiter)", textParameter, delimiterParameter);
        }
    
        [DbFunction("CC_ProdEntities", "StrListToTable")]
        public virtual IQueryable<StrListToTable_Result> StrListToTable(string strString)
        {
            var strStringParameter = strString != null ?
                new ObjectParameter("strString", strString) :
                new ObjectParameter("strString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StrListToTable_Result>("[CC_ProdEntities].[StrListToTable](@strString)", strStringParameter);
        }
    
        [DbFunction("CC_ProdEntities", "StrListToTable2")]
        public virtual IQueryable<StrListToTable2_Result> StrListToTable2(string strString)
        {
            var strStringParameter = strString != null ?
                new ObjectParameter("strString", strString) :
                new ObjectParameter("strString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StrListToTable2_Result>("[CC_ProdEntities].[StrListToTable2](@strString)", strStringParameter);
        }
    
        [DbFunction("CC_ProdEntities", "ufn_split")]
        public virtual IQueryable<ufn_split_Result> ufn_split(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_split_Result>("[CC_ProdEntities].[ufn_split](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<GetAllRecords_Result> GetAllRecords(Nullable<System.DateTime> call_date, string appname, Nullable<int> use_review)
        {
            var call_dateParameter = call_date.HasValue ?
                new ObjectParameter("call_date", call_date) :
                new ObjectParameter("call_date", typeof(System.DateTime));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            var use_reviewParameter = use_review.HasValue ?
                new ObjectParameter("use_review", use_review) :
                new ObjectParameter("use_review", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRecords_Result>("GetAllRecords", call_dateParameter, appnameParameter, use_reviewParameter);
        }
    
        public virtual ObjectResult<GetPay3SCW_Result> getPay3SCW(string week_ending, string scorecard, Nullable<int> max_efficiency)
        {
            var week_endingParameter = week_ending != null ?
                new ObjectParameter("week_ending", week_ending) :
                new ObjectParameter("week_ending", typeof(string));
    
            var scorecardParameter = scorecard != null ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(string));
    
            var max_efficiencyParameter = max_efficiency.HasValue ?
                new ObjectParameter("max_efficiency", max_efficiency) :
                new ObjectParameter("max_efficiency", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPay3SCW_Result>("getPay3SCW", week_endingParameter, scorecardParameter, max_efficiencyParameter);
        }
    
        public virtual ObjectResult<PayHistory_Result> getPayHistory(string reviewer)
        {
            var reviewerParameter = reviewer != null ?
                new ObjectParameter("reviewer", reviewer) :
                new ObjectParameter("reviewer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PayHistory_Result>("getPayHistory", reviewerParameter);
        }
    
        public virtual ObjectResult<getCompletedSCCSCall_Result> getCompletedSCCSCall(Nullable<int> f_id, string username)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCompletedSCCSCall_Result>("getCompletedSCCSCall", f_idParameter, usernameParameter);
        }
    
        public virtual ObjectResult<getCompletedSCCall_Result> getCompletedSCCall(Nullable<int> f_id, string username)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCompletedSCCall_Result>("getCompletedSCCall", f_idParameter, usernameParameter);
        }
    
        public virtual ObjectResult<getCompletedSCCalibration_Result> getCompletedSCCalibration(Nullable<int> id, string username)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCompletedSCCalibration_Result>("getCompletedSCCalibration", idParameter, usernameParameter);
        }
    
        public virtual int getPay3SCW_original(string week_ending, string scorecard, Nullable<int> max_efficiency)
        {
            var week_endingParameter = week_ending != null ?
                new ObjectParameter("week_ending", week_ending) :
                new ObjectParameter("week_ending", typeof(string));
    
            var scorecardParameter = scorecard != null ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(string));
    
            var max_efficiencyParameter = max_efficiency.HasValue ?
                new ObjectParameter("max_efficiency", max_efficiency) :
                new ObjectParameter("max_efficiency", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getPay3SCW_original", week_endingParameter, scorecardParameter, max_efficiencyParameter);
        }
    
        public virtual ObjectResult<getCompletedSCClientCalibration_Result> getCompletedSCClientCalibration(Nullable<int> id, string username)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCompletedSCClientCalibration_Result>("getCompletedSCClientCalibration", idParameter, usernameParameter);
        }
    
        public virtual ObjectResult<getCompletedSCEdited_Result> getCompletedSCEdited(Nullable<int> f_id, string username, string call_username)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var call_usernameParameter = call_username != null ?
                new ObjectParameter("call_username", call_username) :
                new ObjectParameter("call_username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCompletedSCEdited_Result>("getCompletedSCEdited", f_idParameter, usernameParameter, call_usernameParameter);
        }
    
        public virtual ObjectResult<getScorecardData_Result> getScorecardData(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getScorecardData_Result>("getScorecardData", iDParameter);
        }
    
        public virtual ObjectResult<getSchoolDataWithPos_Result> getSchoolDataWithPos(Nullable<int> form_id, Nullable<int> review_id)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var review_idParameter = review_id.HasValue ?
                new ObjectParameter("review_id", review_id) :
                new ObjectParameter("review_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSchoolDataWithPos_Result>("getSchoolDataWithPos", form_idParameter, review_idParameter);
        }
    
        public virtual ObjectResult<getCombinedComments_Result> getCombinedComments(Nullable<int> f_id, string user_role)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var user_roleParameter = user_role != null ?
                new ObjectParameter("user_role", user_role) :
                new ObjectParameter("user_role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCombinedComments_Result>("getCombinedComments", f_idParameter, user_roleParameter);
        }
    
        public virtual ObjectResult<getMyMenu_Result> getMyMenu(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMyMenu_Result>("getMyMenu", usernameParameter);
        }
    
        public virtual ObjectResult<getMyModules_Result> getMyModules(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMyModules_Result>("getMyModules", usernameParameter);
        }
    
        public virtual int getMyModules1(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getMyModules1", usernameParameter);
        }
    
        public virtual ObjectResult<getSections2_Result> getSections2(Nullable<int> form_id)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSections2_Result>("getSections2", form_idParameter);
        }
    
        public virtual ObjectResult<getCTemplateItems_Result> getCTemplateItems(Nullable<int> form_id, Nullable<int> question_id, Nullable<int> client)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var question_idParameter = question_id.HasValue ?
                new ObjectParameter("question_id", question_id) :
                new ObjectParameter("question_id", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCTemplateItems_Result>("getCTemplateItems", form_idParameter, question_idParameter, clientParameter);
        }
    
        public virtual ObjectResult<getotherformdata_Result> getotherformdata(Nullable<int> xcc_id)
        {
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getotherformdata_Result>("getotherformdata", xcc_idParameter);
        }
    
        public virtual ObjectResult<spotcheckUpdate_Result> spotcheckUpdate(Nullable<int> this_spot, Nullable<int> f_id, string username, string notes, string update_type, Nullable<int> review_time)
        {
            var this_spotParameter = this_spot.HasValue ?
                new ObjectParameter("this_spot", this_spot) :
                new ObjectParameter("this_spot", typeof(int));
    
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var update_typeParameter = update_type != null ?
                new ObjectParameter("update_type", update_type) :
                new ObjectParameter("update_type", typeof(string));
    
            var review_timeParameter = review_time.HasValue ?
                new ObjectParameter("review_time", review_time) :
                new ObjectParameter("review_time", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spotcheckUpdate_Result>("spotcheckUpdate", this_spotParameter, f_idParameter, usernameParameter, notesParameter, update_typeParameter, review_timeParameter);
        }
    
        public virtual ObjectResult<getMySpotCheck_Result> getMySpotCheck(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMySpotCheck_Result>("getMySpotCheck", usernameParameter);
        }
    
        public virtual int listenDataInsertPlus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("listenDataInsertPlus");
        }
    
        public virtual ObjectResult<copyCalibScores_Result> copyCalibScores(Nullable<int> form_id, string username)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<copyCalibScores_Result>("copyCalibScores", form_idParameter, usernameParameter);
        }
    
        public virtual ObjectResult<deleteOneCallCompletely_Result> deleteOneCallCompletely(Nullable<int> f_id)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deleteOneCallCompletely_Result>("deleteOneCallCompletely", f_idParameter);
        }
    
        public virtual ObjectResult<updateAllComments_Result> updateAllComments(Nullable<int> form_id)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updateAllComments_Result>("updateAllComments", form_idParameter);
        }
    
        public virtual ObjectResult<getPopulatedScorecard_Result> getPopulatedScorecard(Nullable<int> scorecard, Nullable<int> xcc_id, string username, Nullable<int> show_calc)
        {
            var scorecardParameter = scorecard.HasValue ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(int));
    
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var show_calcParameter = show_calc.HasValue ?
                new ObjectParameter("show_calc", show_calc) :
                new ObjectParameter("show_calc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPopulatedScorecard_Result>("getPopulatedScorecard", scorecardParameter, xcc_idParameter, usernameParameter, show_calcParameter);
        }
    
        public virtual ObjectResult<getCalibrationHours_Result> getCalibrationHours()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCalibrationHours_Result>("getCalibrationHours");
        }
    
        public virtual ObjectResult<getAllCallScorecards_Result> getAllCallScorecards(Nullable<int> f_id, string username)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllCallScorecards_Result>("getAllCallScorecards", f_idParameter, usernameParameter);
        }
    
        public virtual ObjectResult<getRejectionReasons_Result> getRejectionReasons(Nullable<int> scorecard)
        {
            var scorecardParameter = scorecard.HasValue ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRejectionReasons_Result>("getRejectionReasons", scorecardParameter);
        }
    
        public virtual ObjectResult<makeBlankForm_Result> makeBlankForm(Nullable<int> review_id)
        {
            var review_idParameter = review_id.HasValue ?
                new ObjectParameter("review_id", review_id) :
                new ObjectParameter("review_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<makeBlankForm_Result>("makeBlankForm", review_idParameter);
        }
    
        public virtual int insertSystemComments(Nullable<int> x_Id, string user, ObjectParameter returnValue)
        {
            var x_IdParameter = x_Id.HasValue ?
                new ObjectParameter("X_Id", x_Id) :
                new ObjectParameter("X_Id", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSystemComments", x_IdParameter, userParameter, returnValue);
        }
    
        public virtual ObjectResult<getvwTrain_Result> getvwTrain(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getvwTrain_Result>("getvwTrain", idParameter);
        }
    
        public virtual ObjectResult<getProAllClientQuestions_Result> getProAllClientQuestions(Nullable<int> f_ID, Nullable<int> iD, Nullable<int> iD1, string username)
        {
            var f_IDParameter = f_ID.HasValue ?
                new ObjectParameter("F_ID", f_ID) :
                new ObjectParameter("F_ID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iD1Parameter = iD1.HasValue ?
                new ObjectParameter("ID1", iD1) :
                new ObjectParameter("ID1", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProAllClientQuestions_Result>("getProAllClientQuestions", f_IDParameter, iDParameter, iD1Parameter, usernameParameter);
        }
    
        public virtual ObjectResult<getFormTrainingResponses_Result> getFormTrainingResponses(Nullable<int> iD, Nullable<int> q_id)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var q_idParameter = q_id.HasValue ?
                new ObjectParameter("Q_id", q_id) :
                new ObjectParameter("Q_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFormTrainingResponses_Result>("getFormTrainingResponses", iDParameter, q_idParameter);
        }
    
        public virtual ObjectResult<getXccReportNew_Result> getXccReportNew(Nullable<int> id, string appname, string username)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getXccReportNew_Result>("getXccReportNew", idParameter, appnameParameter, usernameParameter);
        }
    
        public virtual int ReassignNotification(Nullable<int> f_id)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReassignNotification", f_idParameter);
        }
    
        public virtual int duplicateCall(Nullable<int> form_id, string new_audio)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            var new_audioParameter = new_audio != null ?
                new ObjectParameter("new_audio", new_audio) :
                new ObjectParameter("new_audio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("duplicateCall", form_idParameter, new_audioParameter);
        }
    
        public virtual int resetCall(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("resetCall", idParameter);
        }
    
        public virtual int insertCaliPendingClient(Nullable<int> id, string selectedby, string appname, string username, Nullable<int> scorecard, Nullable<int> isrecal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var selectedbyParameter = selectedby != null ?
                new ObjectParameter("selectedby", selectedby) :
                new ObjectParameter("selectedby", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var scorecardParameter = scorecard.HasValue ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(int));
    
            var isrecalParameter = isrecal.HasValue ?
                new ObjectParameter("isrecal", isrecal) :
                new ObjectParameter("isrecal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertCaliPendingClient", idParameter, selectedbyParameter, appnameParameter, usernameParameter, scorecardParameter, isrecalParameter);
        }
    
        public virtual int markExistingCallBad(Nullable<int> f_id)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("F_id", f_id) :
                new ObjectParameter("F_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("markExistingCallBad", f_idParameter);
        }
    
        public virtual ObjectResult<getListenQuestions_SectionLess_Result> getListenQuestions_SectionLess(Nullable<int> section, Nullable<int> scorecard_id, Nullable<int> xcc_id, Nullable<int> show_calc, string username)
        {
            var sectionParameter = section.HasValue ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(int));
    
            var scorecard_idParameter = scorecard_id.HasValue ?
                new ObjectParameter("scorecard_id", scorecard_id) :
                new ObjectParameter("scorecard_id", typeof(int));
    
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            var show_calcParameter = show_calc.HasValue ?
                new ObjectParameter("show_calc", show_calc) :
                new ObjectParameter("show_calc", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getListenQuestions_SectionLess_Result>("getListenQuestions_SectionLess", sectionParameter, scorecard_idParameter, xcc_idParameter, show_calcParameter, usernameParameter);
        }
    
        public virtual ObjectResult<getCoachingQueueJson_Result> getCoachingQueueJson(string username, string filter)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCoachingQueueJson_Result>("getCoachingQueueJson", usernameParameter, filterParameter);
        }
    
        public virtual int calibDataInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("calibDataInsert");
        }
    
        public virtual ObjectResult<getMyNextTrainingCall_Result> getMyNextTrainingCall(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMyNextTrainingCall_Result>("getMyNextTrainingCall", usernameParameter);
        }
    
        public virtual ObjectResult<checkQATraining_Result> checkQATraining(string username, Nullable<int> scorecard, Nullable<int> cali_count)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var scorecardParameter = scorecard.HasValue ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(int));
    
            var cali_countParameter = cali_count.HasValue ?
                new ObjectParameter("cali_count", cali_count) :
                new ObjectParameter("cali_count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkQATraining_Result>("checkQATraining", usernameParameter, scorecardParameter, cali_countParameter);
        }
    
        public virtual ObjectResult<GetXccReportNewAudioData_Result> GetXccReportNewAudioData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetXccReportNewAudioData_Result>("GetXccReportNewAudioData", idParameter);
        }
    
        public virtual int postProcessQuestions(Nullable<int> f_id, string username)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("f_id", f_id) :
                new ObjectParameter("f_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("postProcessQuestions", f_idParameter, usernameParameter);
        }
    
        public virtual int UpdateMissed(Nullable<int> form_id)
        {
            var form_idParameter = form_id.HasValue ?
                new ObjectParameter("form_id", form_id) :
                new ObjectParameter("form_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMissed", form_idParameter);
        }
    
        public virtual int CreateNotifications(Nullable<int> form_ID, string appname)
        {
            var form_IDParameter = form_ID.HasValue ?
                new ObjectParameter("form_ID", form_ID) :
                new ObjectParameter("form_ID", typeof(int));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateNotifications", form_IDParameter, appnameParameter);
        }
    
        public virtual int send_dbmail(string profile_name, string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string sensitivity, string file_attachments, string query, string execute_query_database, Nullable<bool> attach_query_result_as_file, string query_attachment_filename, Nullable<bool> query_result_header, Nullable<int> query_result_width, string query_result_separator, Nullable<bool> exclude_query_output, Nullable<bool> append_query_error, Nullable<bool> query_no_truncate, Nullable<bool> query_result_no_padding, ObjectParameter mailitem_id, string from_address, string reply_to)
        {
            var profile_nameParameter = profile_name != null ?
                new ObjectParameter("profile_name", profile_name) :
                new ObjectParameter("profile_name", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("recipients", recipients) :
                new ObjectParameter("recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("copy_recipients", copy_recipients) :
                new ObjectParameter("copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("body_format", body_format) :
                new ObjectParameter("body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("importance", importance) :
                new ObjectParameter("importance", typeof(string));
    
            var sensitivityParameter = sensitivity != null ?
                new ObjectParameter("sensitivity", sensitivity) :
                new ObjectParameter("sensitivity", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("file_attachments", file_attachments) :
                new ObjectParameter("file_attachments", typeof(string));
    
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            var execute_query_databaseParameter = execute_query_database != null ?
                new ObjectParameter("execute_query_database", execute_query_database) :
                new ObjectParameter("execute_query_database", typeof(string));
    
            var attach_query_result_as_fileParameter = attach_query_result_as_file.HasValue ?
                new ObjectParameter("attach_query_result_as_file", attach_query_result_as_file) :
                new ObjectParameter("attach_query_result_as_file", typeof(bool));
    
            var query_attachment_filenameParameter = query_attachment_filename != null ?
                new ObjectParameter("query_attachment_filename", query_attachment_filename) :
                new ObjectParameter("query_attachment_filename", typeof(string));
    
            var query_result_headerParameter = query_result_header.HasValue ?
                new ObjectParameter("query_result_header", query_result_header) :
                new ObjectParameter("query_result_header", typeof(bool));
    
            var query_result_widthParameter = query_result_width.HasValue ?
                new ObjectParameter("query_result_width", query_result_width) :
                new ObjectParameter("query_result_width", typeof(int));
    
            var query_result_separatorParameter = query_result_separator != null ?
                new ObjectParameter("query_result_separator", query_result_separator) :
                new ObjectParameter("query_result_separator", typeof(string));
    
            var exclude_query_outputParameter = exclude_query_output.HasValue ?
                new ObjectParameter("exclude_query_output", exclude_query_output) :
                new ObjectParameter("exclude_query_output", typeof(bool));
    
            var append_query_errorParameter = append_query_error.HasValue ?
                new ObjectParameter("append_query_error", append_query_error) :
                new ObjectParameter("append_query_error", typeof(bool));
    
            var query_no_truncateParameter = query_no_truncate.HasValue ?
                new ObjectParameter("query_no_truncate", query_no_truncate) :
                new ObjectParameter("query_no_truncate", typeof(bool));
    
            var query_result_no_paddingParameter = query_result_no_padding.HasValue ?
                new ObjectParameter("query_result_no_padding", query_result_no_padding) :
                new ObjectParameter("query_result_no_padding", typeof(bool));
    
            var from_addressParameter = from_address != null ?
                new ObjectParameter("from_address", from_address) :
                new ObjectParameter("from_address", typeof(string));
    
            var reply_toParameter = reply_to != null ?
                new ObjectParameter("reply_to", reply_to) :
                new ObjectParameter("reply_to", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("send_dbmail", profile_nameParameter, recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, sensitivityParameter, file_attachmentsParameter, queryParameter, execute_query_databaseParameter, attach_query_result_as_fileParameter, query_attachment_filenameParameter, query_result_headerParameter, query_result_widthParameter, query_result_separatorParameter, exclude_query_outputParameter, append_query_errorParameter, query_no_truncateParameter, query_result_no_paddingParameter, mailitem_id, from_addressParameter, reply_toParameter);
        }
    
        public virtual ObjectResult<getNextCalibration_Result> getNextCalibration(string username, string scorecard)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var scorecardParameter = scorecard != null ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNextCalibration_Result>("getNextCalibration", usernameParameter, scorecardParameter);
        }
    
        public virtual int getNextCallAPIQAQA(string username, string session_id, Nullable<int> scorecard, Nullable<int> xcc_id)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var session_idParameter = session_id != null ?
                new ObjectParameter("session_id", session_id) :
                new ObjectParameter("session_id", typeof(string));
    
            var scorecardParameter = scorecard.HasValue ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(int));
    
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getNextCallAPIQAQA", usernameParameter, session_idParameter, scorecardParameter, xcc_idParameter);
        }
    
        public virtual ObjectResult<getAllClientQuestionsReview_Result> getAllClientQuestionsReview(Nullable<int> fId, Nullable<int> id, Nullable<int> section_dr, string username)
        {
            var fIdParameter = fId.HasValue ?
                new ObjectParameter("FId", fId) :
                new ObjectParameter("FId", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var section_drParameter = section_dr.HasValue ?
                new ObjectParameter("section_dr", section_dr) :
                new ObjectParameter("section_dr", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllClientQuestionsReview_Result>("getAllClientQuestionsReview", fIdParameter, idParameter, section_drParameter, usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getPassedTraining(Nullable<int> scorecard, string reviewer)
        {
            var scorecardParameter = scorecard.HasValue ?
                new ObjectParameter("scorecard", scorecard) :
                new ObjectParameter("scorecard", typeof(int));
    
            var reviewerParameter = reviewer != null ?
                new ObjectParameter("reviewer", reviewer) :
                new ObjectParameter("reviewer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getPassedTraining", scorecardParameter, reviewerParameter);
        }
    
        public virtual ObjectResult<getFormResponses_Result> getFormResponses(Nullable<int> id, Nullable<int> qId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var qIdParameter = qId.HasValue ?
                new ObjectParameter("QId", qId) :
                new ObjectParameter("QId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFormResponses_Result>("getFormResponses", idParameter, qIdParameter);
        }
    
        public virtual ObjectResult<GetAllRecordsWithPending_Result> GetAllRecordsWithPending(Nullable<System.DateTime> call_date, string appname, Nullable<int> use_review)
        {
            var call_dateParameter = call_date.HasValue ?
                new ObjectParameter("call_date", call_date) :
                new ObjectParameter("call_date", typeof(System.DateTime));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            var use_reviewParameter = use_review.HasValue ?
                new ObjectParameter("use_review", use_review) :
                new ObjectParameter("use_review", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRecordsWithPending_Result>("GetAllRecordsWithPending", call_dateParameter, appnameParameter, use_reviewParameter);
        }
    
        public virtual int add_ip(string ip, string appname)
        {
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_ip", ipParameter, appnameParameter);
        }
    
        public virtual ObjectResult<getListenQuestions_Result> getListenQuestions(Nullable<int> section, Nullable<int> scorecard_id, Nullable<int> xcc_id, Nullable<int> show_calc, string username)
        {
            var sectionParameter = section.HasValue ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(int));
    
            var scorecard_idParameter = scorecard_id.HasValue ?
                new ObjectParameter("scorecard_id", scorecard_id) :
                new ObjectParameter("scorecard_id", typeof(int));
    
            var xcc_idParameter = xcc_id.HasValue ?
                new ObjectParameter("xcc_id", xcc_id) :
                new ObjectParameter("xcc_id", typeof(int));
    
            var show_calcParameter = show_calc.HasValue ?
                new ObjectParameter("show_calc", show_calc) :
                new ObjectParameter("show_calc", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getListenQuestions_Result>("getListenQuestions", sectionParameter, scorecard_idParameter, xcc_idParameter, show_calcParameter, usernameParameter);
        }
    
        public virtual ObjectResult<getEditorQuestions_Result> getEditorQuestions(Nullable<int> f_id, Nullable<int> section, string editor)
        {
            var f_idParameter = f_id.HasValue ?
                new ObjectParameter("F_id", f_id) :
                new ObjectParameter("F_id", typeof(int));
    
            var sectionParameter = section.HasValue ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(int));
    
            var editorParameter = editor != null ?
                new ObjectParameter("editor", editor) :
                new ObjectParameter("editor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEditorQuestions_Result>("getEditorQuestions", f_idParameter, sectionParameter, editorParameter);
        }
    
        public virtual ObjectResult<GetformQScoreChanges_Result> GetformQScoreChanges(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetformQScoreChanges_Result>("GetformQScoreChanges", idParameter);
        }
    
        public virtual ObjectResult<GetRecordxccReportNew_Result> GetRecordxccReportNew(Nullable<int> sESSION_ID, string aPPNAME, string uSERNAME)
        {
            var sESSION_IDParameter = sESSION_ID.HasValue ?
                new ObjectParameter("SESSION_ID", sESSION_ID) :
                new ObjectParameter("SESSION_ID", typeof(int));
    
            var aPPNAMEParameter = aPPNAME != null ?
                new ObjectParameter("APPNAME", aPPNAME) :
                new ObjectParameter("APPNAME", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecordxccReportNew_Result>("GetRecordxccReportNew", sESSION_IDParameter, aPPNAMEParameter, uSERNAMEParameter);
        }
    
        public virtual ObjectResult<getvwForm_Result> getvwForm(Nullable<int> id, string aPPNAME, string userName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var aPPNAMEParameter = aPPNAME != null ?
                new ObjectParameter("APPNAME", aPPNAME) :
                new ObjectParameter("APPNAME", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getvwForm_Result>("getvwForm", idParameter, aPPNAMEParameter, userNameParameter);
        }
    
        public virtual ObjectResult<GetuserexTrainfo_Result> GetuserexTrainfo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetuserexTrainfo_Result>("GetuserexTrainfo", idParameter);
        }
    }
}
